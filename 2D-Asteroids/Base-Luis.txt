let greenTriangle;
let redBalls = [];

function setup() {
  createCanvas(800, 800);
  spaceShip = new SpaceShip(width / 2, height / 2, 10); // posicionX, posicionY, tamaÃ±o
}

function draw() {
  background(0);

  spaceShip.lookAt(mouseX, mouseY);
  spaceShip.display();

  for (let i = redBalls.length - 1; i >= 0; i--) {
    if (redBalls[i].update()) {
      redBalls.splice(i, 1);
    } else {
      redBalls[i].display();
    }
  }
}

function mousePressed() {
  redBalls.push(spaceShip.shoot());
}

class SpaceShip {
  constructor(x, y, size) {
    this.position = createVector(x, y);
    this.size = size;
  }

  lookAt(targetX, targetY) {
    this.angle = atan2(targetY - this.position.y, targetX - this.position.x);
  }

  display() {
    fill(0, 255, 0);
    push();
    translate(this.position.x, this.position.y);
    rotate(this.angle + HALF_PI); // Rotate the triangle to point towards the cursor
    triangle(-this.size, this.size, this.size, this.size, 0, -this.size);
    pop();
  }

  shoot() {
    return new RedBall(this.position.x, this.position.y, this.angle, 5);
  }
}

class RedBall {
  constructor(x, y, angle, speed) {
    this.position = createVector(x, y);
    this.velocity = p5.Vector.fromAngle(angle).mult(speed);
    this.radius = 5;
  }

  update() {
    this.position.add(this.velocity);
    return this.isOffScreen();
  }

  display() {
    fill(255, 0, 0);
    ellipse(this.position.x, this.position.y, this.radius * 2);
  }

  isOffScreen() {
    return (
      this.position.x < -this.radius ||
      this.position.x > width + this.radius ||
      this.position.y < -this.radius ||
      this.position.y > height + this.radius
    );
  }
}